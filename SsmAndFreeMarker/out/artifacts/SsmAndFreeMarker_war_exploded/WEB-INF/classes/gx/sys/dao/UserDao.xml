<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gx.sys.dao.UserDao">
  <select id="selectUser" parameterType="gx.common.Page">
    select a.user_id,a.user_name,a.user_py,a.user_org,b.name org_name,a.email,
    a.sex,a.mobile_phone,a.state,a.remarks,a.gmt_create,a.gmt_update,a.gmt_login
    from sys_user a left join sys_user_org b on a.user_org=b.code 
    where 1=1
    <if test="params.userId!=null">
      and a.user_id=#{params.userId}
    </if>
    <if test="params.userName!=null">
      and a.user_name=#{params.userName}
    </if>
    <if test="params.userPy!=null">
      and instr(a.user_py,#{userPy})!=0
    </if>
    <if test="params.email!=null">
      and a.email=#{params.email}
    </if>
    <if test="params.sex!=null">
      and a.sex=#{params.sex}
    </if>
    <if test="params.mobilePhone!=null">
      and a.mobile_phone=#{params.mobilePhone}
    </if>
    <if test="params.state!=null">
      and a.state=#{params.state}
    </if>
  </select>

  <!-- 根据user_id查询用户 -->
  <select id="selectUserById" parameterType="string" resultType="gx.sys.entity.SysUser">
    select a.user_id,a.user_name,a.user_pwd,a.user_py,a.user_org,b.name org_name,
      a.email,a.sex,a.mobile_phone,a.state,a.remarks,a.gmt_create,a.gmt_update,a.gmt_login
    from sys_user a,sys_user_org b where a.user_org=b.code and a.user_id=#{userId}
  </select>

  <!-- 更新用户对应的userOrg -->
  <update id="updateUserOrg" >
    update sys_user set    
    <choose>
    <when test="userOrg!=null">
     user_org=#{userOrg}
    </when>
    <otherwise>
     user_org=null
    </otherwise>
    </choose>
    where user_id=#{userId}
  </update>
  <!-- 通过 userOrg 更新userOrg 为空-->
  <update id="updateUserOrgEmptyByCode" parameterType="String">
    update sys_user set user_org=null where user_org=#{code}
  </update>
  
  <update id="updateUserOrgEmptyByRange">
    update sys_user a set user_org=null
    where exists(select 1 from sys_user_org b where a.user_org=b.code and b.lft between #{lft} and #{rgt})
  </update>

  <insert id="insertUser" parameterType="gx.sys.entity.SysUser">
    insert into sys_user(user_id,user_name,user_py,user_org,user_pwd,email,sex,mobile_phone,state,remarks,gmt_create,gmt_update)
    values(#{userId},#{userName},#{userPy},#{userOrg},#{userPwd},#{email,jdbcType=VARCHAR},#{sex},
      #{mobilePhone,jdbcType=VARCHAR},#{state},#{remarks,jdbcType=VARCHAR},#{gmtCreate},#{gmtUpdate})
  </insert>
  <!-- 更新密码 -->
  <update id="updateUserPwd">
    update sys_user set user_pwd=#{userPwd},gmt_update=#{gmtUpdate} where user_id=#{userId}
  </update>
  <!-- 更新用户 -->
  <update id="updateUser" parameterType="gx.sys.entity.SysUser">
    update sys_user set user_name=#{userName},user_py=#{userPy},user_org=#{userOrg},email=#{email,jdbcType=VARCHAR},sex=#{sex},
      mobile_phone=#{mobilePhone,jdbcType=VARCHAR},state=#{state},remarks=#{remarks,jdbcType=VARCHAR}
    where user_id=#{userId}
  </update>

  <!-- 根据user_id删除用户 -->
  <delete id="deleteUser">
    delete from sys_user where user_id=#{userId}
  </delete>

  <!-- 查询当前用户拥有的角色 -->
  <select id="selectUserRole" parameterType="string" resultType="gx.common.IviewTreeNode">
    select a.sys_id parent,a.role_id id,concat(a.role_name,' #',a.role_id) title,if(b.role_id is null,0,1)  checked,c.sys_name remarks from sys_role a
    left join sys_user_role b on a.sys_id=b.sys_id and a.role_id=b.role_id and b.user_id=#{userId}
    left join sys_id c on a.sys_id=c.sys_id
    order by a.sys_id,a.role_id
  </select>

  <insert id="insertUserRole">
    insert into sys_user_role(sys_id,user_id,role_id) values(#{sysId},#{userId},#{roleId})
  </insert>

  <delete id="deleteUserRole">
    delete from sys_user_role where user_id=#{userId}
    <if test="sysId != null">
      sys_id=#{sysId}
    </if>
    <if test="roleId != null">
      and role_id=#{roleId}
    </if>
  </delete>
  
  <!-- 验证密码是否存在 -->
  <select id="selectSysUserByPwd" resultType="gx.sys.entity.SysUser">
   select user_id,user_pwd,user_py,user_class,user_name,email,sex,mobile_phone,state,remarks,gmt_create,gmt_update,gmt_login
    from sys_user where user_id=#{userId} and user_pwd=#{userPwd}
  </select>
 
</mapper>